<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[《算法笔记及上机实战指南》学习笔记]]></title>
      <url>/2017/08/20/%E3%80%8A%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E5%8F%8A%E4%B8%8A%E6%9C%BA%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><pre><code>最近在跟着胡凡的《算法笔记》和配套的《上机训练实战指南》学习基本的算法。就是这两本。
</code></pre><p><img src="http://ou3525a1l.bkt.clouddn.com/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E5%B0%81%E9%9D%A2.jpg" alt="算法笔记"></p>
<p><img src="http://ou3525a1l.bkt.clouddn.com/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E5%AE%9E%E6%88%98%E8%AE%AD%E7%BB%83%E5%B0%81%E9%9D%A2.jpg" alt="上机实战训练指南"></p>
<pre><code>在这里记录一下学习之中的一些心得和一些题目的解题思路，不保证最优，欢迎指正，权当备忘，因为这个博客也并没有加入百度或者谷歌的SEO，这意味着，它不会被你在搜索引擎中搜索到，唯二能够访问这个博客的可能只是从我本人这里获取地址或者从我的[Github](https://github.com/Pumpkinor/)主页上链接过来。
</code></pre><h4 id="第二章-C-C-快速入门"><a href="#第二章-C-C-快速入门" class="headerlink" title="第二章  C/C++ 快速入门"></a>第二章  C/C++ 快速入门</h4><pre><code>这一章是对于基础的C/C++语言语法进行简略的介绍，不作为系统性的C/C++语言学习使用，只讲述与算法竞赛，在线oj相关的语法。侧重于C语言，因为C++语法在机考中多数是用不到的。
</code></pre><ol>
<li>变量类型</li>
<li>关于数据的输入输出</li>
<li>用typedef给数据类型起别名</li>
<li>常用math.h函数</li>
<li>选择结构</li>
<li>循环结构</li>
<li>数组</li>
<li>常用string.h函数</li>
<li>自定义函数</li>
<li>函数递归</li>
<li>指针和引用</li>
<li>结构体</li>
<li>浮点数比较</li>
<li>在线oj的几种测试模式</li>
</ol>
<h4 id="第三章-入门模拟"><a href="#第三章-入门模拟" class="headerlink" title="第三章  入门模拟"></a>第三章  入门模拟</h4><pre><code>这一章主要讲解一些简单的模拟类编程题，没有涉及复杂算法，只要“题目怎么说，你就怎么做”一般都是能够顺利做出来的，主要考察和训练个人的代码能力，对于基础代码能力的提高很有帮助。
下面给出例题和课后题的个人思考和分析，仅供参考使用。
</code></pre><h5 id="3-1-简单模拟："><a href="#3-1-简单模拟：" class="headerlink" title="3.1 简单模拟："></a>3.1 简单模拟：</h5><ol>
<li><a href="">PAT B1001 害死人不偿命的(3n+1)猜想</a></li>
<li><a href="">PAT B1032 挖掘机技术哪家强</a></li>
</ol>
<h5 id="3-2-查找元素："><a href="#3-2-查找元素：" class="headerlink" title="3.2 查找元素："></a>3.2 查找元素：</h5><ol>
<li><a href="">CodeUp 1934 找x</a></li>
</ol>
<h5 id="3-3-图形输出"><a href="#3-3-图形输出" class="headerlink" title="3.3 图形输出:"></a>3.3 图形输出:</h5><ol>
<li><a href="">PAT B1036 跟奥巴马一起编程</a></li>
</ol>
<h5 id="3-4-日期处理"><a href="#3-4-日期处理" class="headerlink" title="3.4 日期处理:"></a>3.4 日期处理:</h5><ol>
<li><a href="">CodeUp 1928 日期差值</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Algorithm Note </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Note </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在Github和Coding上用Hexo部署自己的静态博客]]></title>
      <url>/2017/08/03/%E5%9C%A8Github%E5%92%8CCoding%E4%B8%8A%E7%94%A8Hexo%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>​    现在你所访问的这个博客就是基于Github和Coding（国内访问稳定）的静态页面服务利用Hexo框架所假设的博客。</p>
<p>​    如果你目的明确，只是为了在短时间内搭建一个博客网站，<a href="https://portablehexo.bitmoe.cn/" target="_blank" rel="external">Hexo Portable</a>很适合你。        <img src="http://ou3525a1l.bkt.clouddn.com/hexo%20portable.png" alt="Hexo Portable"></p>
<p><img src="http://ou3525a1l.bkt.clouddn.com/hexo%20portable2.png" alt="Hexo Portable2"></p>
<p>​    如果你只是漫漫长夜百无聊赖，请看下面的完整版本。</p>
<p>​    Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。下面，来具体介绍一下相关的配置和使用，以windows系统为例：</p>
<p>​    step1：首先，我们需要在电脑上下载并安装<a href="http://nodejs.cn/download/" target="_blank" rel="external">Node.js</a>和<a href="https://git-scm.com/download/win" target="_blank" rel="external">Git Bash</a>（点击链接跳转下载页面）两个软件，无需改动任何设置，默认安装即可。</p>
<p>​    step2：在电脑中新建一个文件夹用于架设博客，Hexo框架和你今后所写的博文还有编译以后的静态页面都会存放在这个文件夹里。</p>
]]></content>
      
        <categories>
            
            <category> Configuration Tutorial </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Some Classical Sorting Methods ]]></title>
      <url>/2017/07/29/Some-Classical-Sorting-Methods-3/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol>
<li><p>冒泡排序</p>
<p>冒泡排序的实质在于交换，即多次通过比较数组相邻元素，把其中最大的一个元素移动到最右边的位置放置不管，再在剩余元素中进行同样的操作，直到剩余元素为0为止。</p>
<p>具体比较方式如下：</p>
<p>从a[0]与a[1]比较到a[n-2]与a[n-1]并将二者之间较大的元素放到右边位置，这样一次操作称之为一轮冒泡，此时数组最右边元素a[n-1]就是整个数组元素中最大的那一个。</p>
<p>第2轮则是从a[0]与a[1]比较到a[n-3]与a[n-2]并将二者之间较大的元素放到右边位置，由于已知a[n-1]是整个数组元素中最大的那一个，故不需要再重复比较a[n-2]和a[n-1]的大小，此时数组元素a[n-2]就是整个数组元素中第二大的那一个。</p>
<p>第3轮则是从a[0]与a[1]比较到a[n-4]与a[n-3]并将二者之间较大的元素放到右边位置。</p>
<p>……</p>
<p>依此类推。</p>
<p>第n-2轮则是从a[0]与a[1]比较到a[1]与a[2]。</p>
<p>第n-1轮则仅比较且交换a[0]与a[1]，至此，冒泡结束。数组已经完成了从小到大的排序。</p>
<p>例如：    对a[5]={6,5,2,1,3}进行冒泡排序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">第1轮：</div><div class="line">	1.a[0]和a[1]进行比较并交换			a[5]=&#123;5,6,2,1,3&#125;</div><div class="line">	2.a[1]和a[2]进行比较并交换			a[5]=&#123;5,2,6,1,3&#125;</div><div class="line">	3.a[2]和a[3]进行比较并交换			a[5]=&#123;5,2,1,6,3&#125;</div><div class="line">	4.a[3]和a[4]进行比较并交换			a[5]=&#123;5,2,1,3,6&#125;</div><div class="line">第2轮：</div><div class="line">	1.a[0]和a[1]进行比较并交换			a[5]=&#123;2,5,1,3,6&#125;</div><div class="line">	2.a[1]和a[2]进行比较并交换			a[5]=&#123;2,1,5,3,6&#125;</div><div class="line">	3.a[2]和a[3]进行比较并交换			a[5]=&#123;2,1,3,5,6&#125;</div><div class="line">第3轮：</div><div class="line">	1.a[0]和a[1]进行比较并交换			a[5]=&#123;1,2,3,5,6&#125;</div><div class="line">	2.a[1]和a[2]进行比较并交换			a[5]=&#123;1,2,3,5,6&#125;</div><div class="line">第4轮：</div><div class="line">	1.a[0]和a[1]进行比较并交换			a[5]=&#123;1,2,3,5,6&#125;</div></pre></td></tr></table></figure>
<p>C语言实现代码：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="keyword">int</span> a[<span class="number">10</span>]=&#123;<span class="number">6</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>&#125; ;</div><div class="line">	<span class="comment">//i表示排序进行轮数，一共需进行n-1轮冒泡排序 </span></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++)&#123;</div><div class="line">		<span class="comment">//第i轮排序时，从a[0]到a[n-1-i]都与他们的下一个元素进行比较</span></div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>-i; j++)&#123;</div><div class="line">			<span class="comment">//若a[j]&gt;a[j+1]则进行交换元素 否则则保持不变 </span></div><div class="line">			<span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>])&#123;</div><div class="line">				<span class="keyword">int</span> temp = a[j];</div><div class="line">				a[j] = a[j+<span class="number">1</span>];</div><div class="line">				a[j+<span class="number">1</span>] = temp;</div><div class="line">			&#125; </div><div class="line">		&#125; </div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">5</span>; i++)&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>,a[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>快速排序</p>
</li>
<li><p>插入排序</p>
</li>
<li><p>选择排序</p>
</li>
<li><p>希尔排序</p>
</li>
<li><p>堆排序</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Algorithm </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/07/28/hello-world/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> others </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
